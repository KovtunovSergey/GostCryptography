//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GostCryptography.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GostCryptography.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cryptographic service provider (CSP) could not be found for this algorithm..
        /// </summary>
        internal static string AlgorithmNotAvailable {
            get {
                return ResourceManager.GetString("AlgorithmNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 element &apos;{0}&apos; with value &apos;{1}&apos; violates defined constraint..
        /// </summary>
        internal static string Asn1ConsVioException {
            get {
                return ResourceManager.GetString("Asn1ConsVioException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encoded byte array contains algorithm identifier with unknown OID &apos;{0}&apos;..
        /// </summary>
        internal static string Asn1DecodeAlg {
            get {
                return ResourceManager.GetString("Asn1DecodeAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encoded byte array does not contains algorithm parameters..
        /// </summary>
        internal static string Asn1DecodeAlgorithmParameters {
            get {
                return ResourceManager.GetString("Asn1DecodeAlgorithmParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encoded byte array contains invalid structure &apos;{0}&apos;..
        /// </summary>
        internal static string Asn1DecodeError {
            get {
                return ResourceManager.GetString("Asn1DecodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encode &apos;{0}&apos; error..
        /// </summary>
        internal static string Asn1EncodeError {
            get {
                return ResourceManager.GetString("Asn1EncodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encode &apos;{0}&apos; error. Source value: &apos;{1}&apos;..
        /// </summary>
        internal static string Asn1EncodeErrorWithValue {
            get {
                return ResourceManager.GetString("Asn1EncodeErrorWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error. Unexpected end-of-buffer encountered. Offset {0}..
        /// </summary>
        internal static string Asn1EndOfBufferException {
            get {
                return ResourceManager.GetString("Asn1EndOfBufferException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 fraction doesn&apos;t supported for UTCTime..
        /// </summary>
        internal static string Asn1FractionNotSupportedForUtcTime {
            get {
                return ResourceManager.GetString("Asn1FractionNotSupportedForUtcTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 hours expected..
        /// </summary>
        internal static string Asn1HoursExpected {
            get {
                return ResourceManager.GetString("Asn1HoursExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 illegal character &apos;{0}&apos;..
        /// </summary>
        internal static string Asn1IllegalCharacter {
            get {
                return ResourceManager.GetString("Asn1IllegalCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 illegal digit in BigInteger..
        /// </summary>
        internal static string Asn1IllegalDigit {
            get {
                return ResourceManager.GetString("Asn1IllegalDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 illegal embedded minus sign in BigInteger..
        /// </summary>
        internal static string Asn1IllegalEmbeddedMinusSign {
            get {
                return ResourceManager.GetString("Asn1IllegalEmbeddedMinusSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 integer value is too large..
        /// </summary>
        internal static string Asn1IntegerValueIsTooLarge {
            get {
                return ResourceManager.GetString("Asn1IntegerValueIsTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid century value: {0}..
        /// </summary>
        internal static string Asn1InvalidCenturyValue {
            get {
                return ResourceManager.GetString("Asn1InvalidCenturyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 Object assigned to value not in CHOICE..
        /// </summary>
        internal static string Asn1InvalidChoiceOptionException {
            get {
                return ResourceManager.GetString("Asn1InvalidChoiceOptionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error. Element with tag &apos;{0}&apos; not in CHOICE. Offset: {1}..
        /// </summary>
        internal static string Asn1InvalidChoiceOptionTagException {
            get {
                return ResourceManager.GetString("Asn1InvalidChoiceOptionTagException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid date format..
        /// </summary>
        internal static string Asn1InvalidDateFormat {
            get {
                return ResourceManager.GetString("Asn1InvalidDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid day value: {0}..
        /// </summary>
        internal static string Asn1InvalidDayValue {
            get {
                return ResourceManager.GetString("Asn1InvalidDayValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid day value: {0} for month {1} and year {2}..
        /// </summary>
        internal static string Asn1InvalidDayValueForMonthAndYear {
            get {
                return ResourceManager.GetString("Asn1InvalidDayValueForMonthAndYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid decimal mark..
        /// </summary>
        internal static string Asn1InvalidDecimalMark {
            get {
                return ResourceManager.GetString("Asn1InvalidDecimalMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid DiffHour..
        /// </summary>
        internal static string Asn1InvalidDiffHour {
            get {
                return ResourceManager.GetString("Asn1InvalidDiffHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid DiffHour value: {0}..
        /// </summary>
        internal static string Asn1InvalidDiffHourValue {
            get {
                return ResourceManager.GetString("Asn1InvalidDiffHourValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid DiffMinute..
        /// </summary>
        internal static string Asn1InvalidDiffMinute {
            get {
                return ResourceManager.GetString("Asn1InvalidDiffMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid DiffMinute value: {0}..
        /// </summary>
        internal static string Asn1InvalidDiffMinuteValue {
            get {
                return ResourceManager.GetString("Asn1InvalidDiffMinuteValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 encoded data length must be a multiple of four..
        /// </summary>
        internal static string Asn1InvalidEncodedDataLength {
            get {
                return ResourceManager.GetString("Asn1InvalidEncodedDataLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid format for BigInteger value..
        /// </summary>
        internal static string Asn1InvalidFormatForBigIntegerValue {
            get {
                return ResourceManager.GetString("Asn1InvalidFormatForBigIntegerValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid format of bit string: initial octet is invalid ({0})..
        /// </summary>
        internal static string Asn1InvalidFormatOfBitString {
            get {
                return ResourceManager.GetString("Asn1InvalidFormatOfBitString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error. ASN.1 invalid format of constructed value. Offset: {0}..
        /// </summary>
        internal static string Asn1InvalidFormatOfConstructedValue {
            get {
                return ResourceManager.GetString("Asn1InvalidFormatOfConstructedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid hour value: {0}..
        /// </summary>
        internal static string Asn1InvalidHourValue {
            get {
                return ResourceManager.GetString("Asn1InvalidHourValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error: Invalid length value..
        /// </summary>
        internal static string Asn1InvalidLengthException {
            get {
                return ResourceManager.GetString("Asn1InvalidLengthException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid minute value: {0}..
        /// </summary>
        internal static string Asn1InvalidMinuteValue {
            get {
                return ResourceManager.GetString("Asn1InvalidMinuteValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid month value: {0}..
        /// </summary>
        internal static string Asn1InvalidMonthValue {
            get {
                return ResourceManager.GetString("Asn1InvalidMonthValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid month value: {0} for day {1} and year {2}..
        /// </summary>
        internal static string Asn1InvalidMonthValueForDayAndYear {
            get {
                return ResourceManager.GetString("Asn1InvalidMonthValueForDayAndYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid number format..
        /// </summary>
        internal static string Asn1InvalidNumberFormat {
            get {
                return ResourceManager.GetString("Asn1InvalidNumberFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid object identifier value..
        /// </summary>
        internal static string Asn1InvalidObjectIdException {
            get {
                return ResourceManager.GetString("Asn1InvalidObjectIdException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid second value: {0}..
        /// </summary>
        internal static string Asn1InvalidSecondValue {
            get {
                return ResourceManager.GetString("Asn1InvalidSecondValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid tag value: too big..
        /// </summary>
        internal static string Asn1InvalidTagValue {
            get {
                return ResourceManager.GetString("Asn1InvalidTagValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid year value: {0}..
        /// </summary>
        internal static string Asn1InvalidYearValue {
            get {
                return ResourceManager.GetString("Asn1InvalidYearValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid year value: {0} for day {1} and month {2}..
        /// </summary>
        internal static string Asn1InvalidYearValueForDayAndMonth {
            get {
                return ResourceManager.GetString("Asn1InvalidYearValueForDayAndMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 minutes expected..
        /// </summary>
        internal static string Asn1MinutesExpected {
            get {
                return ResourceManager.GetString("Asn1MinutesExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error. SEQUENCE or SET is missing a required element. Offset: {0}..
        /// </summary>
        internal static string Asn1MissingRequiredException {
            get {
                return ResourceManager.GetString("Asn1MissingRequiredException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 read output stream not supported..
        /// </summary>
        internal static string Asn1ReadOutputStreamNotSupported {
            get {
                return ResourceManager.GetString("Asn1ReadOutputStreamNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 elements in SEQUENCE not in correct order..
        /// </summary>
        internal static string Asn1SeqOrderException {
            get {
                return ResourceManager.GetString("Asn1SeqOrderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 table constraint: parameters decode failed..
        /// </summary>
        internal static string Asn1TableConstraint {
            get {
                return ResourceManager.GetString("Asn1TableConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 decode error. Tag match failed: expected &apos;{0}&apos;, parsed &apos;{1}&apos;. Offset {2}..
        /// </summary>
        internal static string Asn1TagMatchFailedException {
            get {
                return ResourceManager.GetString("Asn1TagMatchFailedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 time string could not be generated..
        /// </summary>
        internal static string Asn1TimeStringCouldNotBeGenerated {
            get {
                return ResourceManager.GetString("Asn1TimeStringCouldNotBeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 too big integer value (length is {0})..
        /// </summary>
        internal static string Asn1TooBigIntegerValue {
            get {
                return ResourceManager.GetString("Asn1TooBigIntegerValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 unexpected &apos;.&apos; or &apos;,&apos;..
        /// </summary>
        internal static string Asn1UnexpectedSymbol {
            get {
                return ResourceManager.GetString("Asn1UnexpectedSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 unexpected values at end of string..
        /// </summary>
        internal static string Asn1UnexpectedValuesAtEndOfString {
            get {
                return ResourceManager.GetString("Asn1UnexpectedValuesAtEndOfString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 unexpected zone offset in DER/CER/PER time string..
        /// </summary>
        internal static string Asn1UnexpectedZoneOffset {
            get {
                return ResourceManager.GetString("Asn1UnexpectedZoneOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 value parse failed. String: &apos;{0}&apos;. Offset: {1}..
        /// </summary>
        internal static string Asn1ValueParseException {
            get {
                return ResourceManager.GetString("Asn1ValueParseException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 zero length BigInteger..
        /// </summary>
        internal static string Asn1ZeroLengthBigInteger {
            get {
                return ResourceManager.GetString("Asn1ZeroLengthBigInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cipher Text Steaming mode (CTS) is not supported by this implementation..
        /// </summary>
        internal static string CipherTextSteamingNotSupported {
            get {
                return ResourceManager.GetString("CipherTextSteamingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Length of the data to decrypt is invalid..
        /// </summary>
        internal static string DecryptInvalidDataSize {
            get {
                return ResourceManager.GetString("DecryptInvalidDataSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Length of the data to encrypt is invalid..
        /// </summary>
        internal static string EncryptInvalidDataSize {
            get {
                return ResourceManager.GetString("EncryptInvalidDataSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cryptography operation is not supported on ephemeral key..
        /// </summary>
        internal static string EphemKeyOperationNotSupported {
            get {
                return ResourceManager.GetString("EphemKeyOperationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk session key import from CSP is not supported. Use safe method CreateDecryptor() with DecodePrivateKey()..
        /// </summary>
        internal static string Gost28147UnsafeCreateDecryptorNotSupported {
            get {
                return ResourceManager.GetString("Gost28147UnsafeCreateDecryptorNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk session key import from CSP is not supported. Use safe method CreateEncryptor() with EncodePrivateKey()..
        /// </summary>
        internal static string Gost28147UnsafeCreateEncryptor {
            get {
                return ResourceManager.GetString("Gost28147UnsafeCreateEncryptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Feedback size for the cipher feedback mode (CFB) must be 8 bits..
        /// </summary>
        internal static string IncorrectFeedbackSize {
            get {
                return ResourceManager.GetString("IncorrectFeedbackSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value of CspProviderFlags is invalid..
        /// </summary>
        internal static string InvalidCspProviderFlags {
            get {
                return ResourceManager.GetString("InvalidCspProviderFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string InvalidDataOffset {
            get {
                return ResourceManager.GetString("InvalidDataOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASN.1 invalid Diff value: {0}..
        /// </summary>
        internal static string InvalidDiffValue {
            get {
                return ResourceManager.GetString("InvalidDiffValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Input string does not contain a valid encoding of the &apos;{0}&apos; parameter..
        /// </summary>
        internal static string InvalidFromXmlString {
            get {
                return ResourceManager.GetString("InvalidFromXmlString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid hash algorithm..
        /// </summary>
        internal static string InvalidHashAlgorithm {
            get {
                return ResourceManager.GetString("InvalidHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GOST R 34.11-94 algorithm hash size is 32 bytes..
        /// </summary>
        internal static string InvalidHashSize {
            get {
                return ResourceManager.GetString("InvalidHashSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specified initialization vector (IV) does not match the block size for this algorithm..
        /// </summary>
        internal static string InvalidIvSize {
            get {
                return ResourceManager.GetString("InvalidIvSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specified padding mode is not valid for this algorithm..
        /// </summary>
        internal static string InvalidPaddingMode {
            get {
                return ResourceManager.GetString("InvalidPaddingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CSP return invalid string..
        /// </summary>
        internal static string InvalidString {
            get {
                return ResourceManager.GetString("InvalidString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified cryptographic service provider (CSP) does not support this key algorithm..
        /// </summary>
        internal static string KeyAlgorithmNotSupported {
            get {
                return ResourceManager.GetString("KeyAlgorithmNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Object contains only the public half of a key pair. A private key must also be provided..
        /// </summary>
        internal static string NoPrivateKey {
            get {
                return ResourceManager.GetString("NoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Required GOST 28147 key handle..
        /// </summary>
        internal static string RequiredGost28147 {
            get {
                return ResourceManager.GetString("RequiredGost28147", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GOST R 34.10 requires GOST R 34.11 hash..
        /// </summary>
        internal static string RequiredGost3411 {
            get {
                return ResourceManager.GetString("RequiredGost3411", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hash algorithm must be GOST R 34.11, GOST R 34.11 HMAC or GOST R 34.11 Imit..
        /// </summary>
        internal static string RequiredGostHash {
            get {
                return ResourceManager.GetString("RequiredGostHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parameter must support GOST R 34.10 algorithm..
        /// </summary>
        internal static string ShouldSupportGost3410 {
            get {
                return ResourceManager.GetString("ShouldSupportGost3410", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk session key export from CSP is not supported..
        /// </summary>
        internal static string SymmetryExportBulkKeyNotSupported {
            get {
                return ResourceManager.GetString("SymmetryExportBulkKeyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk session key import from CSP is not supported..
        /// </summary>
        internal static string SymmetryImportBulkKeyNotSupported {
            get {
                return ResourceManager.GetString("SymmetryImportBulkKeyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk private key blob export is not supported..
        /// </summary>
        internal static string UserExportBulkBlob {
            get {
                return ResourceManager.GetString("UserExportBulkBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk user key export from CSP is not supported..
        /// </summary>
        internal static string UserExportBulkKeyNotSupported {
            get {
                return ResourceManager.GetString("UserExportBulkKeyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk private key blob import is not supported..
        /// </summary>
        internal static string UserImportBulkBlob {
            get {
                return ResourceManager.GetString("UserImportBulkBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bulk user key import to CSP is not supported..
        /// </summary>
        internal static string UserImportBulkKeyNotSupported {
            get {
                return ResourceManager.GetString("UserImportBulkKeyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The current session is not interactive..
        /// </summary>
        internal static string UserInteractiveNotSupported {
            get {
                return ResourceManager.GetString("UserInteractiveNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot find private member &apos;{0}&apos;..
        /// </summary>
        internal static string XmlCannotFindPrivateMember {
            get {
                return ResourceManager.GetString("XmlCannotFindPrivateMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A KeyInfo element is required to check the signature..
        /// </summary>
        internal static string XmlKeyInfoRequired {
            get {
                return ResourceManager.GetString("XmlKeyInfoRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Symmetric algorithm is not specified..
        /// </summary>
        internal static string XmlMissingAlgorithm {
            get {
                return ResourceManager.GetString("XmlMissingAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to retrieve the decryption key..
        /// </summary>
        internal static string XmlMissingDecryptionKey {
            get {
                return ResourceManager.GetString("XmlMissingDecryptionKey", resourceCulture);
            }
        }
    }
}
